pwd
ls -lia
ls /app
cp .???* /app -rvf
apk install zsh
apk add zsh
ps -ef
cat /passwd
cat /etc/passwd
su nobody
ng
ls
npm i 
ls
./node_modules/.bin/ng
git
apk add git
git
ls -lia
cat .ash_history 
ls -lia
pwd
ls -lia
cd ..
cd
./node_modules/.bin/ng
cd ..
$HOME/node_modules/.bin/ng new angularImo --style=scss
ls -lia
ls
cd angularImo/
ls -lia
cdd
cd
ls
rm -rf package* node*
cd /angularImo/
ls -lia
mv .???* * $HOME -rvf
mv .???* $HOME -rvf
mv .???* $HOME -Rvf
mv .???* $HOME -vf
ls
mv * $HOME -vf
cd
rmdir /angularImo/
ls -lia
ng
npm i -g @angular/cli
ng
ls /usr/bin/ng
ls /usr/bin/ng -lia
ng 
ps -ef
w
cat package.json 
vi package.json 
ng serve -h
vi package.json 
ng serve
vi package.json 
ng start
ng serve --host 0.0.0.0
ng add @angular/material
ng add @angular/material@6.0.1
ng add
ng --help
ng add --help
ng analistics
ng -v
ng version
cd /
ls
ls /
ng -b
ng -v
ng version
ng add
pwd
ls
cd ;;
cd ..
ng new aImob --style=scss
git config --global user.email "egito.salvador@gmail.com"
git config --global user.name "Egito"
ng -v
ls
cd aImob/
ls
cd
ls
rm -rf node_modules/
cd /aImob/
ls
ls -lia
cp * $HOME/ -rvf
ls -lia|less
cp .???* $HOME/ -rvf
cd ..
rm -rf aImob/
cd
ls
ls -lia
vi package.json 
ng start
vi package.json 
ng serve --help
ng serve --host 0.0.0.0
ng add
ng add @angular/material
ls
ps -ef
npm start
ng test
npm start
ng add @angular/cdk
npm start
npm i hammerjs
npm start
npm i prisma
prisma 
npm prisma 
find . -name prisma
echo $PATH
export PATH=$PATH:
echo $PATH
pwd
export PATH=$PATH/node_modules/.bin
echo $PATH
prisma
export PATH=$PATH:$HOME/node_modules/.bin
echo $PATH
prisma
prisma init imob-bk
ls
ls server
prisma init imob-bk
prisma init -h
prisma init imob-bk
ls -l
ls
ls src
ls server
ls
ls ..
ls $HOME
prisma init --help
export PATH=$PATH:$HOME/node_modules/.bin
prisma init --help
prisma help init
prisma deploy
ls -l
find . -name prisma.yml
prisma init imob
ls
export DEBUG="*"
prisma init imob
mkdir imob
prisma init imob
mkdir imob-db
rmdir imob
mkdir imob-bk
rmdir imob-db
prisma init imob-bk
ls
cd imob-bk
ls -l
ls generated/
ls generated/prisma-client/
cd ..
cd imob-bk/
prisma deploy
ls
prisma deploy
export PATH=$PATH:$HOME/node_modules/.bin
prisma deploy
cd imob-bk/
prisma deploy
export DEBUG="*"
prisma help deploy
export DEBUG="*"
export PATH=$PATH:$HOME/node_modules/.bin
cd imob-bk/
ls
prisma deploy
ls
cd imob-bk/
ls -l
export PATH=$PATH:$HOME/node_modules/.bin
prisma deploy
ifconfig
ping imob-bk
ls -l
prisma deploy
ls
rm -rf generated/
prisma deploy
ls -l
cd ..
cd imob-bk/
ls
graphcool
export PATH=$PATH:$HOME/node_modules/.bin
graphcool
npm i graphcool
ls
graphcool
docker ps -a
ps -ef
ls -l
graphcool init
graphcool local up
ps -ef
graphcool playground
npm i -g graphcool@0.4
graphcool playground
graphcool local up
graphcool init
cd ..
graphcool init
ls
rm -rf imob-bk/ graphcool.yml types.graphql src/hello.* graphcool.yml 
vi package.json 
ls 
graphcool init imob-bk
ls imob-bk/
rm package.json 
cat package-lock.json 
npm i
ls -l
pwd
cd imob-bk/
ls
graphcool 
export PATH=$PATH:$HOME/node_modules/.bin
graphcool 
graphcool local up
graphcool deploy
graphcool local up
ls
graphcool push
cd ..
ls
rm -rf imob-bk
ls
prisma
ls
prisma 
export PATH=$PATH:$HOME/node_modules/.bin
prisma 
prisma init imob-bk
ls imob-bk/
cd imob-bk/
ls -l
prisma
prisma init 
prisma deploy
chown egito.egito . -R
chown 1000.1000 . -R
ls
echo $ENDPOINT
prisma 
export PATH=$PATH:$HOME/node_modules/.bin
prisma 
prisma info
cd imob-bk/
prisma info
vi prisma.yml 
prisma info
prisma 
prisma admin
ping imob-bk
prisma deploy
vi prisma.yml 
prisma deploy
ping imob-bk
export PATH=$PATH:$HOME/node_modules/.bin
cd imob-bk/
prisma info
prisma deploy
npm remove prisma
prisma
cd imob-bk/
ls
ls ..
ls
cd ..
ls
npm i -g prisma:1.28
npm i -g prisma@1.28
cd imob
cd imob-bk/
ls
prisma
prisma info
prisma deploy
vi prisma.yml 
export PRISMA_MANAGEMENT_API_SECRET="*"
prisma deploy
export PRISMA_MANAGEMENT_API_SECRET="salvador*egito"
prisma deploy
echo export PRISMA_MANAGEMENT_API_SECRET="salvador*egito" >> define.args.sh
ls
prisma deploy
ls ..
less ../package.json 
cd ..
ls
pwd
cd
ls
vi docker-compose.yml 
ps -ef
ping imob-bk
ping imob-db
ping imob-bk
ping imob-pgadmin
ping imob-bk
ps -ef
ifconfig
ping imob-bk
ps -ef
ls
prisma
export PATH=$PATH:$HOME/node_modules/.bin
prisma
pwd
ls node_modules/
ls node_modules/.bin
npm i -g prisma:1.34
npm install -g prisma:1.34
npm install -g prisma
npm install -g prisma@1.34
prisma
prisma info
cd imob-bk-prisma/
prisma info
export DEBUG="*"
prisma info
prisma init 
ls
vi docker-compose.yml 
rm docker-compose.yml 
less prisma.yml 
ls
less datamodel.prisma 
vi prisma.yml 
Ã§s
ls
ls generated/
ls generated/prisma-client/
rm -rf generated/prisma-client/*
ls -l
prisma info
cat *sh
vi *sh
. *sh
prisma info
vi prisma.yml 
prisma info
vi prisma.yml 
prisma info
prisma deploy
echo DATABASE_URL=postgresql://postgres:salvador!@imob-db/prisma
echo DATABASE_URL=postgresql://postgres:salvador!@imob-db/prisma > .env
prisma deploy
cd imob-bk-prisma/
ls -lia
prisma
prisma deploy
cat *sh
vi *sh
sh *sh
cat .env
prisma deploy
prisma generate
prisma generate model egito
touch gen.prisma
rm touch gen.prisma
prisma generate model egito
rm define.args.sh 
prisma init
mkdir 1
cd 1
prisma init
ls
cat prisma.yml 
mv prisma.yml datamodel.prisma ..
cd ,,
cd ..
ls
prisma info
prisma deploy
ifconfig
pwd
git status
git secret
git login
git 
git show
ls
git push
ls
cd imob-bk-prisma/
ls
prisma deploy
export DEBUG="*"
prisma deploy
cd imob-bk-prisma/
prisma deploy
pwd
cd imob-bk-prisma/
ls
prisma deploy
pwd
ls
cd imob-bk-prisma/
ps -ef
prisma
prisma deploy
cd ..
ls
less package.json 
pwd
ls
git status
git add .
